{"version":3,"sources":["redux/utility.js","components/layouts/Canvas.js","redux/reducers/authReducer.js","redux/types.js","redux/store.js","components/pages/Home.js","components/routes/PrivateRoute.js","components/layouts/Constants.js","components/layouts/LayoutUtilities.js","algorithms/WeightedGraph.js","components/pages/Floormap.js","components/routes/BaseRouter.js","App.js","serviceWorker.js","index.js"],"names":["ctx","g","updateObject","oldObject","updatedProperties","initialState","process","REACT_APP_DB","token","error","loading","isAuthenticated","authStart","state","action","authSuccess","authFail","payload","clearErrors","authLogout","authReducer","type","middleware","thunk","reducers","combineReducers","enhancer","composeWithDevTools","applyMiddleware","store","createStore","Home","connect","auth","Component","component","rest","render","props","to","totalWidthTiles","totalHeightTiles","tileSize","Math","floor","window","innerWidth","innerHeight","mapWidth","mapHeight","_tileSize","getPositionKey","x","y","Number","getCoordinates","key","actual","getLastKey","_totalWidthTiles","_totalHeightTiles","getCategoryKeyArr","startKey","categoryWidth","categoryHeight","categoryArr","i","console","log","j","currentKey","push","WeightedGraph","this","adjacencyList","wallArr","Array","fill","vertex","String","k1","k2","weight","useWeights","key1","key2","_addWeightEdge","_addWallEdge","_addEdge","node","style","root","width","height","display","justifyContent","alignItems","Canvas","fillColor","color","beginPath","rect","fillStyle","drawFloor","addVertex","drawCategories","length","addCategory","catArr","addMapCategories","canvas","refs","getContext","Promise","resolve","setState","ref","React","Floormap","pn","BaseRouter","exact","path","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8eAAO,IC4BHA,EACAC,ED7BSC,EAAe,SAACC,EAAWC,GACtC,O,yVAAO,CAAP,GACKD,EADL,GAEKC,IEADC,GFqBYC,yDAAYC,aErBT,CACnBC,MAAO,KACPC,MAAO,KACPC,SAAS,EACTC,iBAAiB,IAGbC,EAAY,SAACC,EAAOC,GACxB,OAAOZ,EAAaW,EAAO,CACzBJ,MAAO,KACPC,SAAS,KAIPK,EAAc,SAACF,EAAOC,GAC1B,OAAOZ,EAAaW,EAAO,CACzBL,MAAOM,EAAON,MACdC,MAAO,KACPC,SAAS,EACTC,iBAAiB,KAIfK,EAAW,SAACH,EAAOC,GACvB,OAAOZ,EAAaW,EAAO,CAEzBJ,MAAOK,EAAOG,QACdP,SAAS,KAIPQ,EAAc,SAACL,EAAOC,GAC1B,OAAOZ,EAAaW,EAAO,CACzBH,SAAS,EACTD,MAAO,QAILU,EAAa,SAACN,EAAOC,GACzB,OAAOZ,EAAaW,EAAOR,IAoBde,EAjBK,WAAmC,IAAlCP,EAAiC,uDAAzBR,EAAcS,EAAW,uCACpD,OAAQA,EAAOO,MACb,IC9CsB,aD+CpB,OAAOT,EAAUC,GACnB,IC/CwB,eDgDtB,OAAOE,EAAYF,EAAOC,GAC5B,IChDqB,YDiDnB,OAAOE,EAASH,EAAOC,GACzB,ICjDuB,cDkDrB,OAAOK,EAAWN,GACpB,IClDwB,eDmDtB,OAAOK,EAAYL,GACrB,QACE,OAAOA,IE3CPS,EAAa,CAACC,KAEdC,EAAWC,0BAAgB,CAC/BL,gBAUIM,EAAWC,8BAAoBC,kBAAe,WAAf,EAAmBN,IAGzCO,EAFDC,sBAAYN,EAhBL,GAgB6BE,G,+BCnBnCK,GCSAC,aAJS,SAAAnB,GAAK,MAAK,CAChCoB,KAAMpB,EAAMO,eAGCY,EAfM,SAAC,GAAD,IAAcE,EAAd,EAAGC,UAAsBF,EAAzB,EAAyBA,KAASG,EAAlC,2CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GACN,OAAIL,EAAKvB,QAAgB,2CACfuB,EAAKtB,gBACH,kBAACuB,EAAcI,GADY,kBAAC,IAAD,CAAUC,GAAG,sBDN7C,kBACX,oCACE,yCACA,kBAAC,IAAD,CAAMA,GAAI,wBAAV,e,wCEJSC,EAAkB,GAClBC,EAAmB,GACnBC,EAAW,SAACF,GACvB,OAAOG,KAAKC,OAAOC,OAAOC,WAAaD,OAAOE,YAAcF,OAAOC,WAAaD,OAAOE,aAAeP,IAG3FQ,EAAWR,EAAkBE,EAASF,GARvB,GASfS,EAAYR,EAAmBC,EAASF,GARxB,GCCvBU,EAAYR,EAASF,GAEdW,EAAiB,SAACC,EAAGC,GAChC,OAAOV,KAAKC,MAAMU,OAAOF,GAAKF,GAAaP,KAAKC,MAAMU,OAAOD,GAAKH,GAAaV,GAGpEe,EAAiB,SAACC,GAAsB,IAAjBC,IAAgB,yDAClD,OAAe,IAAXA,EAEK,CACLL,EAAGE,OAAOE,GAAOhB,EACjBa,EAAGV,KAAKC,MAAMY,EAAMhB,IAIf,CACLY,EAAIE,OAAOE,GAAOhB,EAAmBU,EACrCG,EAAGV,KAAKC,MAAMU,OAAOE,GAAOhB,GAAmBU,IAKxCQ,EAAa,SAACC,EAAkBC,GAG3C,OAAOT,EAFGD,EAAYS,EAAmBT,EAC/BA,EAAYU,EAAoBV,IAa/BW,EAAoB,SAACC,EAASC,EAAeC,GAGxD,IAFA,IAAMC,EAAc,GADwD,EAE7DV,EAAeO,GAAvBV,EAFqE,EAErEA,EAAGC,EAFkE,EAElEA,EACDa,EAAEd,EAAGc,EAAEd,EAAEW,EAAeG,GAAIhB,EAAW,CAC9CiB,QAAQC,IAAIF,GACZ,IAAK,IAAIG,EAAEhB,EAAGgB,EAAEhB,EAAEW,EAAgBK,GAAInB,EAAW,CAC/CiB,QAAQC,IAAIC,GACZ,IAAMC,EAAanB,EAAee,EAAGG,GACrCF,QAAQC,IAAIE,GACZL,EAAYM,KAAKD,IAGrB,OAAOL,GCCMO,E,WAjDb,WAAYhC,EAAiBC,GAAmB,oBAC9CgC,KAAKC,cAAgB,GACrBD,KAAKE,QAAU,IAAIC,MAAMlB,EAAWlB,EAAiBC,IAAmBoC,KAAK,M,sDAGrEC,GACR,IAAMtB,EAAMuB,OAAOD,GACdL,KAAKC,cAAclB,KAAMiB,KAAKC,cAAclB,GAAO,M,8BAGlDwB,EAAIC,EAAIC,EAAQC,GACtB,IAAMC,EAAOL,OAAOC,GACdK,EAAON,OAAOE,GACfE,EAGHV,KAAKa,eAAeF,EAAMC,EAAMH,GAFhCT,KAAKc,aAAaH,EAAMC,EAAMH,K,mCAMrBF,EAAIC,EAAIC,GACM,IAArBT,KAAKE,QAAQK,IAAkC,IAArBP,KAAKE,QAAQM,IACzCR,KAAKe,SAASR,EAAIC,EAAIC,K,qCAIXF,EAAIC,EAAIC,GACjBT,KAAKE,QAAQK,GAAMP,KAAKE,QAAQM,GAClCC,EAAST,KAAKE,QAAQK,GACbP,KAAKE,QAAQM,GAAMR,KAAKE,QAAQK,KACzCE,EAAST,KAAKE,QAAQM,KAEZ,IAARA,GACFR,KAAKe,SAASR,EAAIC,EAAIC,K,+BAIjBF,EAAIC,EAAIC,GACfT,KAAKC,cAAcM,GAAIT,KAAK,CAC1BkB,KAAMR,EACNC,WAEFT,KAAKC,cAAcO,GAAIV,KAAK,CAC1BkB,KAAMT,EACNE,e,KR7BAQ,EAAQ,CACZC,KAAM,CACJC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAkHDC,E,YA1Gb,aAAe,IAAD,8BACZ,+CA4CFC,UAAY,SAAC1C,EAAK2C,GAAW,IACpBzD,EAAY,EAAK7B,MAAjB6B,SADmB,EAEXa,EAAeC,GAAvBJ,EAFmB,EAEnBA,EAAGC,EAFgB,EAEhBA,EACVrD,EAAIoG,YACJpG,EAAIqG,KAAKjD,EAAGC,EAAGX,EAAUA,GACzB1C,EAAIsG,UAAYH,EAChBnG,EAAI6E,QAnDQ,EAsDd0B,UAAY,WACVtG,EAAI,IAAIuE,EAAchC,EAAiBC,GACvC,IAAK,IAAIyB,EAAE,EAAGA,GAAGR,EAAWlB,EAAiBC,GAAmByB,IAE9DjE,EAAEuG,UAAUtC,GACZ,EAAKgC,UAAUhC,EAAG,QAEpB,EAAKgC,UAAU,GAAI,QA7DP,EAgEdO,eAAiB,WACf,IAAK,IAAIvC,EAAE,EAAGA,EAAEjE,EAAE0E,QAAQ+B,OAAQxC,IACX,IAAjBjE,EAAE0E,QAAQT,IACZ,EAAKgC,UAAUhC,EAAG,UAnEV,EAwEdyC,YAAc,SAAC7C,EAAUC,EAAeC,GAEtC,IADA,IAAM4C,EAAS/C,EAAkBC,EAAUC,EAAeC,GACjDE,EAAE,EAAGA,EAAE0C,EAAOF,OAAQxC,IAC7BjE,EAAE0E,QAAQiC,EAAO1C,IAAM,GA3Eb,EAiFd2C,iBAAmB,WAAO,IACjBnE,EAAY,EAAK7B,MAAjB6B,SAGP,EAAKiE,YAAY,EAFP,EAEYjE,EADZ,EACwBA,IAnFlC,EAAK7B,MAAQ,CACX6B,SAAUA,EAASF,GACnBQ,WACAC,aALU,E,iFAWZ,IAAM6D,EAASrC,KAAKsC,KAAKD,OACzB9G,EAAM8G,EAAOE,WAAW,MACxBvC,KAAK8B,YACL9B,KAAKoC,mBACLpC,KAAKgC,mB,oCAIO5F,GAAQ,IAAD,OACnB,OAAO,IAAIoG,SAAQ,SAACC,GAClB,EAAKC,SAAStG,EAAOqG,Q,+BAuEvB,OACE,yBAAKxB,MAAOA,EAAMC,MAChB,4BACEyB,IAAI,SACJxB,MAAOnB,KAAK5D,MAAMmC,SAClB6C,OAAQpB,KAAK5D,MAAMoC,WAHrB,2D,GA/FaoE,IAAMnF,WStBZoF,EANE,kBACf,oCACE,kBAAC,EAAD,QCEEC,EAAK,aAWIC,EATI,kBACjB,oCACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIvF,UAAWJ,IACjC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAI,WAAMH,GAAMpF,UAAWJ,IACxC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAI,WAAMH,EAAN,aAAqBpF,UAAWmF,MCIpCK,MAVf,WACE,OACE,kBAAC,IAAD,CAAU9F,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,SCCY+F,QACW,cAA7B/E,OAAOgF,SAASC,UAEe,UAA7BjF,OAAOgF,SAASC,UAEhBjF,OAAOgF,SAASC,SAASC,MACvB,2DCZNC,IAAS3F,OAAO,kBAAC,EAAD,MAAS4F,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.907c393a.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = getState => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  // Get token from state\n  const token = getState().authReducer.token;\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n};\n\nexport const db = process.env.REACT_APP_DB;\n","import React from \"react\";\nimport {\n  widthPadding,\n  heightPadding,\n  totalWidthTiles,\n  totalHeightTiles,\n  mapWidth,\n  mapHeight,\n  tileSize\n} from \"./Constants\";\nimport {\n  getImageFile,\n  getCoordinates,\n  getLastKey,\n  getCategoryKeyArr\n} from \"./LayoutUtilities\";\nimport WeightedGraph from \"../../algorithms/WeightedGraph\";\n\nconst style = {\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  }\n}\n\nlet ctx;\nlet g;\n\nclass Canvas extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tileSize: tileSize(totalWidthTiles),\n      mapWidth,\n      mapHeight,\n      // g: new WeightedGraph(totalWidthTiles, totalHeightTiles),\n    }\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    ctx = canvas.getContext(\"2d\");\n    this.drawFloor();\n    this.addMapCategories();\n    this.drawCategories();\n    // window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  setStateAsync(state) {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  }\n\n  // updateDimensions = async () => {\n  //   const {tileSize} = this.state;\n  //   // const tileSize = Math.floor(window.innerWidth / totalWidthTiles);\n  //   const mapWidth = totalWidthTiles * tileSize;\n  //   const mapHeight = totalHeightTiles * tileSize;\n  //   const g = new WeightedGraph(totalWidthTiles, totalHeightTiles);\n  //   await this.setStateAsync({tileSize, mapWidth, mapHeight, g});\n  //   this.drawFloor();\n  // }\n\n  // draw = (key, type) => {\n  //   const {x, y} = getCoordinates(Number(key));\n  //   const imageFile = getImageFile(type);\n  //   const img = new Image();\n  //   img.onload = () => {\n  //     ctx.drawImage(img, x, y, tileSize, tileSize);\n  //   }\n  //   img.src = imageFile;\n  // }\n\n  fillColor = (key, color) => {\n    const {tileSize} = this.state;\n    const {x, y} = getCoordinates(key);\n    ctx.beginPath();\n    ctx.rect(x, y, tileSize, tileSize);\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  drawFloor = () => {\n    g = new WeightedGraph(totalWidthTiles, totalHeightTiles);\n    for (let i=0; i<=getLastKey(totalWidthTiles, totalHeightTiles); i++) {\n      // this.draw(i, \"test\");\n      g.addVertex(i);\n      this.fillColor(i, \"grey\");\n    }\n    this.fillColor(25, \"red\");\n  }\n\n  drawCategories = () => {\n    for (let i=0; i<g.wallArr.length; i++) {\n      if (g.wallArr[i] === 1) {\n        this.fillColor(i, \"green\")\n      }\n    }\n  }\n\n  addCategory = (startKey, categoryWidth, categoryHeight) => {\n    const catArr = getCategoryKeyArr(startKey, categoryWidth, categoryHeight);\n    for (let i=0; i<catArr.length; i++) {\n      g.wallArr[catArr[i]] = 1;\n      // this.fillColor(catArr[i], \"green\")\n    }\n    // console.log(this.state.g.wallArr)\n  }\n\n  addMapCategories = () => {\n    const {tileSize} = this.state;\n    const w = 1;\n    const h = 2;\n    this.addCategory(4, w*tileSize, h*tileSize);\n    // this.addCategory(30, 100, 200);\n    // this.addCategory(40, 100, 200);\n    // this.addCategory(90, 200, 100);\n  }\n\n  render() {\n    return (\n      <div style={style.root}>\n        <canvas\n          ref=\"canvas\"\n          width={this.state.mapWidth}\n          height={this.state.mapHeight}\n        >\n          Your browser doesn't support the HTML5 CANVAS tag.\n        </canvas>\n      </div>\n    )\n  }\n}\n\nexport default Canvas;\n","import * as actionTypes from \"../types\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  isAuthenticated: false,\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false,\n    isAuthenticated: true\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    // error: action.error,\n    error: action.payload,\n    loading: false,\n  });\n};\n\nconst clearErrors = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: null\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, initialState);\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.CLEAR_ERRORS:\n      return clearErrors(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","// User Authentication\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from \"./reducers/authReducer\";\n// import iexReducer from \"./reducers/iexReducer\";\n// import userReducer from \"./reducers/userReducer\";\n// import searchReducer from \"./reducers/searchReducer\";\n// import tradeReducer from \"./reducers/tradeReducer\";\n// import fundsReducer from \"./reducers/fundsReducer\";\n// import newsReducer from \"./reducers/newsReducer\";\n// import fmpReducer from \"./reducers/fmpReducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n  authReducer,\n  // iexReducer,\n  // userReducer,\n  // searchReducer,\n  // tradeReducer,\n  // fundsReducer,\n  // newsReducer,\n  // fmpReducer,\n});\n\nconst enhancer = composeWithDevTools(applyMiddleware(...middleware));\nconst store = createStore(reducers, initialState, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => (\n  <>\n    <h1>Home Page</h1>\n    <Link to={\"/shoptimize/floormap\"}>floormap</Link>\n  </>\n);\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (auth.loading) return <div>loading...</div>\n      else if (!auth.isAuthenticated) return <Redirect to=\"/dashboard\" />;\n      else return <Component {...props} />;\n    }}\n  />\n);\n\nconst mapStateToProps = state => ({\n  auth: state.authReducer\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","export const widthPadding = 40;\nexport const heightPadding = 40;\nexport const totalWidthTiles = 10\nexport const totalHeightTiles = 10\nexport const tileSize = (totalWidthTiles) => {\n  return Math.floor((window.innerWidth < window.innerHeight ? window.innerWidth : window.innerHeight) / totalWidthTiles);\n}\n// remove excess space from map\nexport const mapWidth = totalWidthTiles * tileSize(totalWidthTiles) - widthPadding;\nexport const mapHeight = totalHeightTiles * tileSize(totalWidthTiles) - heightPadding;\n","import {tileSize, totalWidthTiles, totalHeightTiles} from \"./Constants\";\n\nconst _tileSize = tileSize(totalWidthTiles);\n\nexport const getPositionKey = (x, y) => {\n  return Math.floor(Number(x) / _tileSize) + Math.floor(Number(y) / _tileSize) * totalWidthTiles;\n};\n\nexport const getCoordinates = (key, actual=true) => {\n  if (actual === false) {\n    // get x, y nested array indexes\n    return {\n      x: Number(key) % totalWidthTiles,\n      y: Math.floor(key / totalWidthTiles)\n    };\n  } else {\n    // get top left x, y actual coordinates\n    return {\n      x: (Number(key) % totalWidthTiles) * _tileSize,\n      y: Math.floor(Number(key) / totalWidthTiles) * _tileSize\n    };\n  }\n}\n\nexport const getLastKey = (_totalWidthTiles, _totalHeightTiles) => {\n  const x = _tileSize * _totalWidthTiles - _tileSize;\n  const y = _tileSize * _totalHeightTiles - _tileSize;\n  return getPositionKey(x, y);\n}\n\nexport const getImageFile = (type) => {\n  switch (type) {\n    case \"test\":\n      return \"https://jmd.im/wp-content/uploads/2017/06/blackiv_thumbnail.jpg\";\n    default:\n      return \"\";\n  }\n}\n\nexport const getCategoryKeyArr = (startKey,categoryWidth, categoryHeight) =>  {\n  const categoryArr = [];\n  const {x, y} = getCoordinates(startKey);\n  for (let i=x; i<x+categoryWidth; i=i+_tileSize) {\n    console.log(i)\n    for (let j=y; j<y+categoryHeight; j=j+_tileSize) {\n      console.log(j)\n      const currentKey = getPositionKey(i, j);\n      console.log(currentKey);\n      categoryArr.push(currentKey);\n    }\n  }\n  return categoryArr;\n}\n","import {getLastKey} from \"../components/layouts/LayoutUtilities\";\n\nclass WeightedGraph {\n  constructor(totalWidthTiles, totalHeightTiles) {\n    this.adjacencyList = {};\n    this.wallArr = new Array(getLastKey(totalWidthTiles, totalHeightTiles)).fill(null);\n  }\n\n  addVertex(vertex) {\n    const key = String(vertex);\n    if (!this.adjacencyList[key]) this.adjacencyList[key] = [];\n  }\n\n  addEdge(k1, k2, weight, useWeights) {\n    const key1 = String(k1);\n    const key2 = String(k2);\n    if (!useWeights) {\n      this._addWallEdge(key1, key2, weight);\n    } else {\n      this._addWeightEdge(key1, key2, weight);\n    }\n  }\n\n  _addWallEdge(k1, k2, weight) {\n    if (this.wallArr[k1] === 1 && this.wallArr[k2] === 1) {\n      this._addEdge(k1, k2, weight);\n    }\n  }\n\n  _addWeightEdge(k1, k2, weight) {\n    if (this.wallArr[k1] > this.wallArr[k2]) {\n      weight = this.wallArr[k1];\n    } else if (this.wallArr[k2] > this.wallArr[k1]) {\n      weight = this.wallArr[k2];\n    }\n    if (k2 !== -1) {\n      this._addEdge(k1, k2, weight);\n    }\n  }\n\n  _addEdge(k1, k2, weight) {\n    this.adjacencyList[k1].push({\n      node: k2,\n      weight,\n    });\n    this.adjacencyList[k2].push({\n      node: k1,\n      weight,\n    });\n  }\n}\n\nexport default WeightedGraph;\n","import React from \"react\";\nimport Canvas from \"../layouts/Canvas\";\n\nconst Floormap = () => (\n  <>\n    <Canvas />\n  </>\n);\n\nexport default Floormap;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Home from \"../pages/Home\";\nimport Floormap from \"../pages/Floormap\";\n\n// project name\nconst pn = \"shoptimize\"\n\nconst BaseRouter = () => (\n  <>\n  <Route exact path=\"/\" component={Home} />\n  <Route exact path={`/${pn}`} component={Home} />\n  <Route exact path={`/${pn}/floormap`} component={Floormap} />\n    {/*<PrivateRoute exact path=\"/profile\" component={Profile} />*/}\n  </>\n);\n\nexport default BaseRouter;\n","import React from \"react\";\nimport \"./App.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"./components/routes/BaseRouter\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <BaseRouter />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}